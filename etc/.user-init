; .user-init

(set 'mac-option-modifier 'super)
(set 'mac-command-modifier 'meta)
(set 'org-agenda-files '("~/mind/freedom_as_autonomy/activity.org"))

; coding-system
(prefer-coding-system 'chinese-gbk-dos)
(prefer-coding-system 'utf-8-unix)
(defun gbk ()
  "revert buffer coding to chinese-gbk"
  (interactive)
  (revert-buffer-with-coding-system 'chinese-gbk-dos))

; fcitx
(global-set-key (kbd "C-SPC") 'nil)

(with-eval-after-load 'evil
  (define-key evil-normal-state-map (kbd "M-.") nil))

(with-eval-after-load 'company
  (global-company-mode t)
  (define-key company-active-map (kbd "C-n") 'company-complete-common-or-cycle)
  (define-key company-active-map (kbd "C-p")
    (lambda ()
      (interactive)
      (company-complete-common-or-cycle -1))))

(defun custom-c-mode ()
  "custom c-mode"
  (set 'tab-width 8)
  (set 'backward-delete-char-untabify-method 'hungry)
  (set 'indent-tabs-mode t)
  (set 'c-default-style "linux")
  (set 'c-basic-offset 8)
  (linum-mode)
  (hs-minor-mode)
  (set 'hs-hide-comments-when-hiding-all nil)
  (set 'hs-allow-nesting 1)
  (modify-syntax-entry ?_ "w")
  (ggtags-mode))
(add-hook 'c-mode-hook 'custom-c-mode)
(add-hook 'c++-mode-hook 'custom-c-mode)
(add-hook 'asm-mode-hook 'custom-c-mode)
(add-hook 'java-mode-hook 'custom-c-mode)

(defun custom-sh-mode ()
  "custom sh-mode"
  (set 'tab-width 4)
  (set 'backward-delete-char-untabify-method 'hungry)
  (set 'indent-tabs-mode t)
  (linum-mode)
  (hs-minor-mode)
  (set 'hs-hide-comments-when-hiding-all nil)
  (set 'hs-allow-nesting 1)
  (modify-syntax-entry ?_ "w"))
(add-hook 'sh-mode-hook 'custom-sh-mode)
(add-hook 'perl-mode-hook 'custom-sh-mode)

;(provide '.user-init)
